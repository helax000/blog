<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vim 手册</title>
    <url>/2020/12/01/vim%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="Vim-入门到精通"><a href="#Vim-入门到精通" class="headerlink" title="Vim 入门到精通"></a>Vim 入门到精通</h1><p><embed src="/asset/pdfs/Vim 入门到精通.pdf" width="800" height="600" ></embed></p>
<h1 id="Vim-中文用户手册"><a href="#Vim-中文用户手册" class="headerlink" title="Vim 中文用户手册"></a>Vim 中文用户手册</h1><p><embed src="/asset/pdfs/vim中文用户手册.pdf" width="800" height="600" ></embed></p>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
        <tag>pdf</tag>
      </tags>
  </entry>
  <entry>
    <title>js 宏任务与微任务</title>
    <url>/2020/11/26/jsMacroAndMicroTask/</url>
    <content><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul>
<li><a href="https://juejin.cn/post/6844903512845860872">这一次，彻底弄懂 JavaScript 执行机制</a> ——ssssyoki</li>
<li><a href="https://www.cnblogs.com/wangziye/p/9566454.html">js 宏任务和微任务</a> ——wangziye</li>
</ul>
<h3 id="宏任务"><a href="#宏任务" class="headerlink" title="宏任务"></a>宏任务</h3><table>
<thead>
<tr>
<th></th>
<th>浏览器</th>
<th>Node</th>
</tr>
</thead>
<tbody><tr>
<td>setTimeout</td>
<td>Y</td>
<td>Y</td>
</tr>
<tr>
<td>setInterval</td>
<td>Y</td>
<td>Y</td>
</tr>
<tr>
<td>setImmediate</td>
<td>N</td>
<td>Y</td>
</tr>
<tr>
<td>requestAnimationFrame</td>
<td>Y</td>
<td>N</td>
</tr>
</tbody></table>
<h3 id="微任务"><a href="#微任务" class="headerlink" title="微任务"></a>微任务</h3><table>
<thead>
<tr>
<th></th>
<th>浏览器</th>
<th>Node</th>
</tr>
</thead>
<tbody><tr>
<td>process.nextTick</td>
<td>N</td>
<td>Y</td>
</tr>
<tr>
<td>MutationObserver</td>
<td>Y</td>
<td>N</td>
</tr>
<tr>
<td>(Promise)then catch finally</td>
<td>Y</td>
<td>Y</td>
</tr>
</tbody></table>
<p>执行顺序为：<strong>宏任务 –&gt; 宏任务下的微任务</strong>，循环。</p>
<h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><blockquote>
<p>能搞懂最后值的输出顺序基本没啥问题了</p>
</blockquote>
<p>思考一下以下代码输出结果顺序？结果在文末。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    process.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;3&quot;</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">        resolve()</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;5&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">process.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">    resolve()</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;13&quot;</span>)</span><br><span class="line">&#125;).finally(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;14&quot;</span>)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;9&quot;</span>);</span><br><span class="line">    process.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;10&quot;</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;11&quot;</span>);</span><br><span class="line">        resolve()</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;12&quot;</span>)</span><br><span class="line">    &#125;).finally(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;15&quot;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>ok，以下解析为自我理解，不清楚的可以再看看上方的资料文章。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;1&#x27;</span>);<span class="comment">//宏任务 1</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;2&#x27;</span>);<span class="comment">//宏任务 2</span></span><br><span class="line">        process.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;3&#x27;</span>);<span class="comment">//微任务 2</span></span><br><span class="line">            &#125;<span class="comment">//微任务 2</span></span><br><span class="line">        );<span class="comment">//宏任务 2</span></span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;4&#x27;</span>);<span class="comment">//宏任务 2</span></span><br><span class="line">                resolve();<span class="comment">//宏任务 2</span></span><br><span class="line">            &#125;<span class="comment">//宏任务 2</span></span><br><span class="line">        )<span class="comment">//宏任务 2</span></span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;5&#x27;</span>)<span class="comment">//微任务 2</span></span><br><span class="line">            &#125;<span class="comment">//微任务 2</span></span><br><span class="line">        )<span class="comment">//宏任务 2</span></span><br><span class="line">    &#125;<span class="comment">//宏任务 2</span></span><br><span class="line">);<span class="comment">//宏任务 1</span></span><br><span class="line">process.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;6&#x27;</span>);<span class="comment">//微任务 1</span></span><br><span class="line">    &#125;<span class="comment">//微任务 1</span></span><br><span class="line">);<span class="comment">//宏任务 1</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;7&#x27;</span>);<span class="comment">//宏任务 1</span></span><br><span class="line">        resolve();<span class="comment">//宏任务 1</span></span><br><span class="line">    &#125;<span class="comment">//宏任务 1</span></span><br><span class="line">)<span class="comment">//宏任务 1</span></span><br><span class="line">.then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;8&#x27;</span>)<span class="comment">//微任务 1</span></span><br><span class="line">    &#125;<span class="comment">//微任务 1</span></span><br><span class="line">)<span class="comment">//宏任务 1</span></span><br><span class="line">.then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;13&#x27;</span>)<span class="comment">//微任务 1</span></span><br><span class="line">    &#125;<span class="comment">//微任务 1</span></span><br><span class="line">)<span class="comment">//宏任务 1</span></span><br><span class="line">.finally(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;14&#x27;</span>)<span class="comment">//微任务 1</span></span><br><span class="line">    &#125;<span class="comment">//微任务 1</span></span><br><span class="line">);<span class="comment">//宏任务 1</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;9&#x27;</span>);<span class="comment">//宏任务 2</span></span><br><span class="line">        process.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;10&#x27;</span>);<span class="comment">//微任务 2</span></span><br><span class="line">            &#125;<span class="comment">//微任务 2</span></span><br><span class="line">        );<span class="comment">//宏任务 2</span></span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;11&#x27;</span>);<span class="comment">//宏任务 2</span></span><br><span class="line">                resolve();<span class="comment">//宏任务 2</span></span><br><span class="line">            &#125;<span class="comment">//宏任务 2</span></span><br><span class="line">        )<span class="comment">//宏任务 2</span></span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;12&#x27;</span>)<span class="comment">//微任务 2</span></span><br><span class="line">            &#125;<span class="comment">//微任务 2</span></span><br><span class="line">        )<span class="comment">//宏任务 2</span></span><br><span class="line">        .finally(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="number">15</span>);<span class="comment">//宏任务 3</span></span><br><span class="line">                    &#125;<span class="comment">//宏任务 3</span></span><br><span class="line">                )<span class="comment">//微任务 2</span></span><br><span class="line">            &#125;<span class="comment">//微任务 2</span></span><br><span class="line">        )<span class="comment">//宏任务 2</span></span><br><span class="line">    &#125;<span class="comment">//宏任务 2</span></span><br><span class="line">);<span class="comment">//宏任务 1</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ol>
<li>我这里注释过于啰嗦，只看 <code>console.log</code> 打印行的注释即可。</li>
<li>第一次将整体代码看做一次宏任务(1)，并标注出其微任务(1) 以及 宏任务 (2)</li>
<li>然后将宏任务(2) 看作步骤 2 的整体代码，重复步骤 2，直到完成。</li>
<li>最后执行顺序为：宏任务(1) –&gt; 微任务(1) –&gt; 宏任务 (2) –&gt; 微任务(2) …</li>
</ol>
<p>最后使用 <code>node10.20.1</code> 运行的结果为</p>
<blockquote>
<p>输出: 1、7、6、8、13、14、2、4、9、11、3、10、5、12、15</p>
</blockquote>
<p><strong><em>注意分清楚宏任务与微任务</em></strong></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
</search>
